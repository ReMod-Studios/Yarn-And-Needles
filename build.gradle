plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT' apply false
}


allprojects {
	apply plugin: 'fabric-loom'
	apply plugin: 'maven-publish'

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	archivesBaseName = project.name
	version = project.mod_version

	dependencies {
		minecraft "com.mojang:minecraft:$minecraft_version"
		mappings "net.fabricmc:yarn:$yarn_mappings:v2"
		modImplementation "net.fabricmc:fabric-loader:$loader_version"
		modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
	}

	afterEvaluate {
		processResources {
			inputs.property "version", project.version

			from(sourceSets.main.resources.srcDirs) {
				include "fabric.mod.json"
				expand "version": project.version
			}

			from(sourceSets.main.resources.srcDirs) {
				exclude "fabric.mod.json"
			}
		}
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	jar {
		from "LICENSE"
	}
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
		annotationProcessorPath += main.annotationProcessorPath
	}
}

group = project.maven_group

subprojects {
	group = "$maven_group.$archives_base_name"
}

subprojects.each {
	remapJar.dependsOn("${it.path}:remapJar")
}

dependencies {
	annotationProcessor project(":annotations")
	testmodCompile sourceSets.main.output

	afterEvaluate {
		subprojects.each {
			compile project(path: "${it.name}")
			include project(it.name)
		}

	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
}